/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.begoingto.app;

import com.formdev.flatlaf.themes.FlatMacDarkLaf;
import java.sql.*;
import java.util.HashMap;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author begoingto
 */
public class AppForm extends javax.swing.JFrame {

    public String userHome = System.getProperty("user.home");
    public String reportPath;
    public String constr;
    public String documentPath;
    private String reportTempName="temp02_A4.jrxml";

    /**
     * Creates new form FrmApp
     */
    public AppForm() {
        initComponents();
        this.setResizable(false);
//        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        this.setSize(400, 300);
        this.setLocationRelativeTo(null);
        documentPath = userHome + System.getProperty("file.separator") + "Documents" + System.getProperty("file.separator");
        constr = "jdbc:postgresql://localhost:5432/java_?user=postgres&password=root&connectTimeout=30";
        reportPath = userHome + System.getProperty("file.separator") + "JaspersoftWorkspace" + System.getProperty("file.separator") + "MyReports" + System.getProperty("file.separator") + reportTempName;//./src/dbdata/

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Preview Report");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Export PDF");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Export Html");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(128, 128, 128)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(137, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {
            Class.forName("org.postgresql.Driver");
            constr = "jdbc:postgresql://localhost:5432/java_?user=postgres&password=root&connectTimeout=30";
            Connection con = DriverManager.getConnection(constr); //jdbc:postgresql://127.0.0.1:5432/java_
            String reportPath = userHome + System.getProperty("file.separator") + "JaspersoftWorkspace" + System.getProperty("file.separator") + "MyReports" + System.getProperty("file.separator") + reportTempName;//./src/dbdata/
            JasperDesign jd = JRXmlLoader.load(reportPath);
            String sql = "select * from customer";
            JRDesignQuery qry = new JRDesignQuery();
            qry.setText(sql);
            jd.setQuery(qry);

            JasperReport jr = JasperCompileManager.compileReport(jd);
            JasperPrint jp = JasperFillManager.fillReport(jr, null, con);

            JasperViewer.viewReport(jp);
            con.close();
        } catch (SQLException ex) {
            Logger.getLogger(AppForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (JRException ex) {
            Logger.getLogger(AppForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AppForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        try {
            Class.forName("org.postgresql.Driver");
            constr = "jdbc:postgresql://localhost:5432/java_?user=postgres&password=root&connectTimeout=30";
            Connection con = DriverManager.getConnection(constr); //jdbc:postgresql://127.0.0.1:5432/java_
            String reportPath = userHome + System.getProperty("file.separator") + "JaspersoftWorkspace" + System.getProperty("file.separator") + "MyReports" + System.getProperty("file.separator") + reportTempName;//./src/dbdata/
            JasperDesign jd = JRXmlLoader.load(reportPath);
            String sql = "select * from customer";
            JRDesignQuery qry = new JRDesignQuery();
            qry.setText(sql);
            jd.setQuery(qry);

            JasperReport jr = JasperCompileManager.compileReport(jd);
            JasperPrint jp = JasperFillManager.fillReport(jr, new HashMap<String, Object>(), con);
            
            JasperExportManager.exportReportToHtmlFile(jp, documentPath + "customers.html");
            JOptionPane.showMessageDialog(this, "Successfully!");

            con.close();
        } catch (Exception ex) {
            Logger.getLogger(AppForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try {
            Class.forName("org.postgresql.Driver");
            Connection con = DriverManager.getConnection(constr);
            JasperDesign jd = JRXmlLoader.load(reportPath);
            String sql = "select * from customer";
            JRDesignQuery qry = new JRDesignQuery();
            qry.setText(sql);
            jd.setQuery(qry);

            JasperReport jr = JasperCompileManager.compileReport(jd);

            JasperPrint jp = JasperFillManager.fillReport(jr, new HashMap<String, Object>(), con);

            JasperExportManager.exportReportToPdfFile(jp, documentPath + "customers.pdf");

            JOptionPane.showMessageDialog(this, "Successfully!");

            con.close();
        } catch (Exception ex) {
            Logger.getLogger(AppForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        try {
            UIManager.setLookAndFeel(new FlatMacDarkLaf());
            UIManager.put("Button.arc", 15);
            UIManager.put("Component.arc", 8);
            UIManager.put("ProgressBar.arc", 8);
            UIManager.put("TextComponent.arc", 8);
        } catch (UnsupportedLookAndFeelException e) {
            throw new IllegalAccessError(e.getMessage());
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AppForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    // End of variables declaration//GEN-END:variables
}
